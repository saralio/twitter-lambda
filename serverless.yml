service: twitter-lambda
frameworkVersion: '3'


plugins:
  - serverless-python-requirements
custom:
  pythonRequirements:
    slim: true
    dockerizePip: true 
    useDownloadCache: false
    useStaticCache: false
    fileName: ./requirements/requirements-${env:BRANCH_NAME}.txt
    zip: true

package:
  individually: true
  patterns:
    - '.github/**'
    - '__pycache__/**'
    - 'archive/**'
    - 'tmp/**'
    - '.gitignore'
    - 'env'


provider:
  name: aws
  runtime: python3.7
  stage: ${env:MY_ENV}
  region: ${env:MY_REGION}
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - events:*
            - dynamodb:*
          Resource: "*"

functions:
  hello:
    handler: handler.hello
    events: 
      - schedule: cron(30 12 * * ? *)

    maximumRetryAttempts: 1
    memorySize: 512
    environment: 
      TWITTER_API_SECRET: ${env:TWITTER_API_SECRET}
      TWITTER_API_KEY: ${env:TWITTER_API_KEY}
      TWITTER_ACCESS_TOKEN: ${env:TWITTER_ACCESS_TOKEN}
      TWITTER_ACCESS_TOKEN_SECRET: ${env:TWITTER_ACCESS_TOKEN_SECRET}
      MY_ENV: ${env:MY_ENV}
      MY_REGION: ${env:MY_REGION}